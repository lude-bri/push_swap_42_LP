+set print pretty on
+set print array on
+define main
+start
Temporary breakpoint 1 at 0x401256: file src/main.c, line 50.
Starting program: /home/lude-bri/CC/Rank2/push_swap/ko/push_swap 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Temporary breakpoint 1, main (argc=1, argv=0x7fffffffdf48) at src/main.c:50
+info argc
Undefined info command: "argc".  Try "help info".
+n
+n
[Inferior 1 (process 314472) exited normally]
+q
+set print pretty on
+set print array on
+define main
+info argc
Undefined info command: "argc".  Try "help info".
+n
The program is not being run.
+start
Temporary breakpoint 1 at 0x401256: file src/main.c, line 50.
Starting program: /home/lude-bri/CC/Rank2/push_swap/ko/push_swap 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Temporary breakpoint 1, main (argc=1, argv=0x7fffffffdf48) at src/main.c:50
+main
++display argc
++display *argv@argc
++break main
Breakpoint 2 at 0x401256: file src/main.c, line 50.
++run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 2, main (argc=7, argv=0x7fffffffdf08) at src/main.c:50
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
+q
+set print pretty on
+set print array on
+define main
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=7, argv=0x7fffffffdf08) at src/main.c:50
+q
+set print pretty on
+set print array on
+define main
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=7, argv=0x7fffffffdf08) at src/main.c:50
+q
+set print pretty on
+set print array on
+define main
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=7, argv=0x7fffffffdf08) at src/main.c:50
+N
Undefined command: "N".  Try "help".
+n
+n
+main
++display argc
++display *argv@argc
++display tokens
++display **tokens
++display pab
++display *pab
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000401256 in main at src/main.c:50
	breakpoint already hit 1 time
+q
+set print pretty on
+set print array on
+define main
+break ft_split
Breakpoint 1 at 0x4043e4
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 412186) exited normally]
+main
++display argc
.gdbinit:24: Error in sourced command file:
No symbol "argc" in current context.
+q
+set print pretty on
+set print array on
+define main
+break ft_split
Breakpoint 1 at 0x4043e4
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 412747) exited normally]
+q
+set print pretty on
+set print array on
+define main
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=7, argv=0x7fffffffdf08) at src/main.c:50
+q
+set print pretty on
+set print array on
+define main
+break solve_push_swap
Breakpoint 1 at 0x4011cc: file src/main.c, line 32.
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, solve_push_swap (pab=0x4082a0) at src/main.c:32
+q
+set print pretty on
+set print array on
+define main
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+break solve_push_swap
Breakpoint 2 at 0x4011cc: file src/main.c, line 32.
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=7, argv=0x7fffffffdf08) at src/main.c:50
+info thread
  Id   Target Id                                      Frame 
* 1    Thread 0x7ffff7d79740 (LWP 414833) "push_swap" main (argc=7, argv=0x7fffffffdf08)
    at src/main.c:50
+fs cmd
Focus set to cmd window.
+info b
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000401256 in main at src/main.c:50
	breakpoint already hit 1 time
2       breakpoint     keep y   0x00000000004011cc in solve_push_swap at src/main.c:32
+c
Continuing.

Breakpoint 2, solve_push_swap (pab=0x4082a0) at src/main.c:32
+q
+set print pretty on
+set print array on
+define main
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=7, argv=0x7fffffffdf08) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display **tokens
++display pab
++display *pab
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x64
4: **tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x756c2f656d6f682f
}
+qq
Undefined command: "qq".  Try "help".
+q
+set print pretty on
+set print array on
+define main
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=7, argv=0x7fffffffdf08) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x756c2f656d6f682f
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x756c2f656d6f682f
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x756c2f656d6f682f
}
+s
new_ab (strs=0x7fffffffdf10) at src/construct_ab.c:32
+display strs
7: strs = (char **) 0x7fffffffdf10
+s
ascii_number_sanity_check (strs=0x7fffffffdf10) at src/sanity_check.c:62
+display strs
8: strs = (const char **) 0x7fffffffdf10
+display *strs
9: *strs = 0x7fffffffe358 "2"
+display **strs
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
+display strs[idx]
11: strs[idx] = 0x7fffffffe362 "8"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe362 "8"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x0
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe358 "2"
+s
is_in_range (str=0x7fffffffe358 "2") at src/sanity_check.c:42
+s
get_number_start (str=0x7fffffffe358 "2") at src/sanity_check.c:32
+display str
12: str = 0x7fffffffe358 "2"
+n
12: str = 0x7fffffffe358 "2"
+n
12: str = 0x7fffffffe358 "2"
+n
12: str = 0x7fffffffe358 "2"
+n
is_in_range (str=0x7fffffffe358 "2") at src/sanity_check.c:43
+n
+display num_len
13: num_len = 1
+n
13: num_len = 1
+n
13: num_len = 1
+n
13: num_len = 1
+n
ascii_number_sanity_check (strs=0x7fffffffdf10) at src/sanity_check.c:67
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe358 "2"
+nn
Undefined command: "nn".  Try "help".
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe35a "1"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe35a "1"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe35c "3"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe35c "3"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe35e "6"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe35e "6"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe360 "5"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe360 "5"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe362 "8"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x7fffffffe362 "8"
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x0
+n
8: strs = (const char **) 0x7fffffffdf10
9: *strs = 0x7fffffffe358 "2"
10: **strs = 50 '2'
11: strs[idx] = 0x0
+n
new_ab (strs=0x7fffffffdf10) at src/construct_ab.c:34
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+p this
$1 = (t_stack_ab *) 0x4082a0
+p *this
$2 = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x0
}
+p str_cnt
$3 = 6
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+n
7: strs = (char **) 0x7fffffffdf10
+p *this
$4 = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+s
normailize_int (arr=0x4082c0, size=6) at src/normalize_int.c:81
+n
+n
+n
+p sorted_arr
$5 = (int *) 0x4082e0
+display size
14: size = 6
+display sorted_arr
15: sorted_arr = (int *) 0x4082e0
+display *sorted_arr
16: *sorted_arr = 0
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 0
+p sorted_arr[0]
$6 = 0
+p sorted_arr[1]
$7 = 0
+p sorted_arr[2]
$8 = 0
+p arr[0]
$9 = 8
+p arr[0]
$10 = 8
+p arr[1]
$11 = 5
+p arr[2]
$12 = 6
+p arr[7]
$13 = 0
+p arr[6]
$14 = 33
+p arr[5]
$15 = 2
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
+p sorted_arr[idx]
$16 = 3
+p sorted_arr[idx]
$17 = 3
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
+display sorted_arr[idx]
17: sorted_arr[idx] = 0
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
17: sorted_arr[idx] = 2
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 8
17: sorted_arr[idx] = 134417
+s
quick_sort (arr=0x4082e0, left=0, right=5) at src/normalize_int.c:39
+s
+p pivot
$18 = 6
+p left
$19 = 0
+p right
$20 = 5
+display i
18: i = 0
+display j
19: j = 4211463
+display arr[i]
20: arr[i] = 8
+display arr[j]
21: arr[j] = <error: Cannot access memory at address 0x1418efc>
+display pivot
22: pivot = 6
+n
18: i = 0
19: j = 4211463
20: arr[i] = 8
21: arr[j] = <error: Cannot access memory at address 0x1418efc>
22: pivot = 6
+n
18: i = 0
19: j = 5
20: arr[i] = 8
21: arr[j] = 2
22: pivot = 6
+n
18: i = 0
19: j = 5
20: arr[i] = 8
21: arr[j] = 2
22: pivot = 6
+n
18: i = 0
19: j = 5
20: arr[i] = 8
21: arr[j] = 2
22: pivot = 6
+n
18: i = 0
19: j = 5
20: arr[i] = 8
21: arr[j] = 2
22: pivot = 6
+n
18: i = 0
19: j = 5
20: arr[i] = 8
21: arr[j] = 2
22: pivot = 6
+n
18: i = 0
19: j = 5
20: arr[i] = 8
21: arr[j] = 2
22: pivot = 6
+n
18: i = 1
19: j = 5
20: arr[i] = 5
21: arr[j] = 2
22: pivot = 6
+n
18: i = 1
19: j = 4
20: arr[i] = 5
21: arr[j] = 1
22: pivot = 6
+n
18: i = 1
19: j = 4
20: arr[i] = 5
21: arr[j] = 1
22: pivot = 6
+n
18: i = 1
19: j = 4
20: arr[i] = 5
21: arr[j] = 1
22: pivot = 6
+n
18: i = 2
19: j = 4
20: arr[i] = 6
21: arr[j] = 1
22: pivot = 6
+n
18: i = 2
19: j = 4
20: arr[i] = 6
21: arr[j] = 1
22: pivot = 6
+n
18: i = 2
19: j = 4
20: arr[i] = 6
21: arr[j] = 1
22: pivot = 6
+n
18: i = 2
19: j = 4
20: arr[i] = 6
21: arr[j] = 1
22: pivot = 6
+n
18: i = 2
19: j = 4
20: arr[i] = 6
21: arr[j] = 1
22: pivot = 6
+n
18: i = 3
19: j = 4
20: arr[i] = 3
21: arr[j] = 1
22: pivot = 6
+n
18: i = 3
19: j = 3
20: arr[i] = 3
21: arr[j] = 3
22: pivot = 6
+n
18: i = 3
19: j = 3
20: arr[i] = 3
21: arr[j] = 3
22: pivot = 6
+n
18: i = 3
19: j = 3
20: arr[i] = 3
21: arr[j] = 3
22: pivot = 6
+n
18: i = 4
19: j = 3
20: arr[i] = 6
21: arr[j] = 3
22: pivot = 6
+n
18: i = 4
19: j = 3
20: arr[i] = 6
21: arr[j] = 3
22: pivot = 6
+n
18: i = 4
19: j = 3
20: arr[i] = 6
21: arr[j] = 3
22: pivot = 6
+n
18: i = 4
19: j = 3
20: arr[i] = 6
21: arr[j] = 3
22: pivot = 6
+n
18: i = 4
19: j = 3
20: arr[i] = 6
21: arr[j] = 3
22: pivot = 6
+n
18: i = 4
19: j = 3
20: arr[i] = 6
21: arr[j] = 3
22: pivot = 6
+n
18: i = 4
19: j = 3
20: arr[i] = 6
21: arr[j] = 5
22: pivot = 6
+n
18: i = 4
19: j = 3
20: arr[i] = 6
21: arr[j] = 5
22: pivot = 6
+n
18: i = 4
19: j = 3
20: arr[i] = 6
21: arr[j] = 5
22: pivot = 6
+n
normailize_int (arr=0x4082c0, size=6) at src/normalize_int.c:88
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 134417
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 134417
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 0
+display idx
23: idx = -1
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 1
23: idx = 0
+p arr[idx]
$21 = 8
+s
binary_search (arr=0x4082e0, target=8, begin=0, end=6) at src/normalize_int.c:21
+display arr
24: arr = (const int *) 0x4082e0
+display *arr
25: *arr = 1
+display target
26: target = 8
+display begin
27: begin = 0
+display end
28: end = 6
+display mid
29: mid = 6
+n
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 8
27: begin = 0
28: end = 6
29: mid = 6
+n
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 8
27: begin = 0
28: end = 6
29: mid = 3
+n
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 8
27: begin = 0
28: end = 6
29: mid = 3
+display arr[mid]
30: arr[mid] = 5
+n
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 8
27: begin = 0
28: end = 6
29: mid = 3
30: arr[mid] = 5
+n
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 8
27: begin = 4
28: end = 6
29: mid = 3
30: arr[mid] = 5
+n
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 8
27: begin = 4
28: end = 6
29: mid = 3
30: arr[mid] = 5
+n
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 8
27: begin = 4
28: end = 6
29: mid = 5
30: arr[mid] = 8
+n
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 8
27: begin = 4
28: end = 6
29: mid = 5
30: arr[mid] = 8
+n
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 8
27: begin = 4
28: end = 6
29: mid = 5
30: arr[mid] = 8
+n
normailize_int (arr=0x4082c0, size=6) at src/normalize_int.c:94
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 1
23: idx = 0
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 2
23: idx = 1
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 2
23: idx = 1
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 3
23: idx = 2
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 3
23: idx = 2
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 5
23: idx = 3
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 5
23: idx = 3
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 6
23: idx = 4
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 6
23: idx = 4
+n
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 8
23: idx = 5
+s
binary_search (arr=0x4082e0, target=2, begin=0, end=6) at src/normalize_int.c:21
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 2
27: begin = 0
28: end = 6
29: mid = 1
30: arr[mid] = 2
+s
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 2
27: begin = 0
28: end = 6
29: mid = 1
30: arr[mid] = 2
+s
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 2
27: begin = 0
28: end = 6
29: mid = 3
30: arr[mid] = 5
+s
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 2
27: begin = 0
28: end = 6
29: mid = 3
30: arr[mid] = 5
+s
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 2
27: begin = 0
28: end = 6
29: mid = 3
30: arr[mid] = 5
+s
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 2
27: begin = 0
28: end = 2
29: mid = 3
30: arr[mid] = 5
+s
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 2
27: begin = 0
28: end = 2
29: mid = 3
30: arr[mid] = 5
+s
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 2
27: begin = 0
28: end = 2
29: mid = 1
30: arr[mid] = 2
+s
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 2
27: begin = 0
28: end = 2
29: mid = 1
30: arr[mid] = 2
+s
24: arr = (const int *) 0x4082e0
25: *arr = 1
26: target = 2
27: begin = 0
28: end = 2
29: mid = 1
30: arr[mid] = 2
+s
normailize_int (arr=0x4082c0, size=6) at src/normalize_int.c:94
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 8
23: idx = 5
+s
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1
17: sorted_arr[idx] = 134417
23: idx = 6
+s
__GI___libc_free (mem=0x4082e0) at ./malloc/malloc.c:3352
+s
+s
+s
+s
+s
+s
arena_for_chunk (ptr=0x4082d0) at ./malloc/arena.c:162
+s
__GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391
+s
_int_free (av=0x7ffff7f96c80 <main_arena>, p=0x4082d0, have_lock=0) at ./malloc/malloc.c:4421
+s
+s
+s
+s
+s
+s
+s
+s
+s
tcache_put (tc_idx=0, chunk=0x4082d0) at ./malloc/malloc.c:3181
+s
+s
+s
+s
_int_free (av=0x7ffff7f96c80 <main_arena>, p=0x4082d0, have_lock=0) at ./malloc/malloc.c:4482
+s
__GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3394
+s
normailize_int (arr=0x4082c0, size=6) at src/normalize_int.c:97
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1032
17: sorted_arr[idx] = 134417
23: idx = 6
+s
14: size = 6
15: sorted_arr = (int *) 0x4082e0
16: *sorted_arr = 1032
17: sorted_arr[idx] = 134417
23: idx = 6
+s
new_ab (strs=0x7fffffffdf10) at src/construct_ab.c:54
7: strs = (char **) 0x7fffffffdf10
+s
7: strs = (char **) 0x7fffffffdf10
+s
main (argc=7, argv=0x7fffffffdf08) at src/main.c:65
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+s
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+s
solve_push_swap (pab=0x4082a0) at src/main.c:32
+s
new_command_buffer () at src/push_swap_command.c:29
+s
solve_push_swap (pab=0x4082a0) at src/main.c:33
+s
+s
is_ab_sorted (this=0x4082a0) at src/stack_ab_utility.c:21
+n
+n
+n
+n
+n
+n
+n
+n
solve_push_swap (pab=0x4082a0) at src/main.c:40
+p pab
$22 = (t_stack_ab *) 0x4082a0
+p *pab
$23 = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+s
sort_ab (pab=0x4082a0, p_cmd_vec=0x408300) at src/psa_quick.c:69
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
solve_push_swap (pab=0x4082a0) at src/main.c:41
+n
+q
+set print pretty on
+set print array on
+define main
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=7, argv=0x7fffffffdf08) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x756c2f656d6f682f
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x756c2f656d6f682f
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x756c2f656d6f682f
}
+p **tokens
$1 = 50 '2'
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+p pab
$2 = (t_stack_ab *) 0x4082a0
+p *pab
$3 = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+s
solve_push_swap (pab=0x4082a0) at src/main.c:32
+s
new_command_buffer () at src/push_swap_command.c:29
+s
solve_push_swap (pab=0x4082a0) at src/main.c:33
+q
+set print pretty on
+set print array on
+define main
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 2 1 3 6 5 8
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=7, argv=0x7fffffffdf08) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x756c2f656d6f682f
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x756c2f656d6f682f
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x756c2f656d6f682f
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+s
solve_push_swap (pab=0x4082a0) at src/main.c:32
+s
new_command_buffer () at src/push_swap_command.c:29
+p set_int
$1 = {int (void *, void *)} 0x403710 <set_int>
+p free_Int
No symbol "free_Int" in current context.
+n
solve_push_swap (pab=0x4082a0) at src/main.c:33
+p p_cmd_buffer
$2 = (t_ft_vector *) 0x408300
+p *p_cmd_buffer
$3 = {
  pbuffer = 0x408370,
  size = 0,
  capacity = 256,
  data_size = 4,
  construct_data = 0x403710 <set_int>,
  delete_data = 0x403730 <free_int>,
  at = 0x403e60 <ft_vec_at>,
  front = 0x403eb0 <ft_vec_front>,
  back = 0x403ef0 <ft_vec_back>,
  empty = 0x403f40 <ft_vec_empty>,
  clear = 0x403f60 <ft_vec_clear>,
  push_back = 0x404130 <ft_vec_push_back>,
  resize = 0x403fd0 <ft_vec_resize>
}
+n
+s
is_ab_sorted (this=0x4082a0) at src/stack_ab_utility.c:21
+display *this
7: *this = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+n
7: *this = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+s
b_size (this=0x4082a0) at src/stack_ab_utility.c:79
+n
is_ab_sorted (this=0x4082a0) at src/stack_ab_utility.c:24
7: *this = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+p b_size(this)
$4 = 0
+n
7: *this = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+display pdata[idx]
No symbol "pdata" in current context.
+display this->pdata[idx]
8: this->pdata[idx] = 5
+n
7: *this = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
8: this->pdata[idx] = 5
+n
7: *this = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
8: this->pdata[idx] = 3
+n
7: *this = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
8: this->pdata[idx] = 3
+n
7: *this = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
8: this->pdata[idx] = 3
+n
solve_push_swap (pab=0x4082a0) at src/main.c:40
+n
+n
+n
+n
main (argc=7, argv=0x7fffffffdf08) at src/main.c:71
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 6,
  a_bot = 0,
  b_bot = 5,
  pivot = 6,
  pdata = 0x4082c0
}
+n
1: argc = 7
2: *argv@argc = {
  0x7fffffffe329 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe358 "2",
  0x7fffffffe35a "1",
  0x7fffffffe35c "3",
  0x7fffffffe35e "6",
  0x7fffffffe360 "5",
  0x7fffffffe362 "8"
}
3: tokens = (char **) 0x7fffffffdf10
4: *tokens = 0x7fffffffe358 "2"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 4228808,
  a_bot = 0,
  b_bot = -558832881,
  pivot = 57390348,
  pdata = 0x4082c0
}
+n
__libc_start_call_main (main=main@entry=0x401240 <main>, argc=argc@entry=7, argv=argv@entry=0x7fffffffdf08) at ../sysdeps/nptl/libc_start_call_main.h:74
+n
[Inferior 1 (process 430981) exited normally]
+q
+set print pretty on
+set print array on
+define main
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdec8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+p argc
$1 = 13
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe342 "65"
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+p **tokens
$2 = 54 '6'
+p argv
$3 = (char **) 0x7fffffffdec8
+p **agv
No symbol "agv" in current context.
+p **argv
$4 = 47 '/'
+p *argv
$5 = 0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap"
+p **argv
$6 = 47 '/'
+p toknes
No symbol "toknes" in current context.
+p tokens
$7 = (char **) 0x7fffffffded0
+p *tokens
$8 = 0x7fffffffe342 "65"
+p **tokens
$9 = 54 '6'
+p *tokens
$10 = 0x7fffffffe342 "65"
+p tokens[1]
$11 = 0x7fffffffe345 "45"
+p tokens[2]
$12 = 0x7fffffffe348 "71"
+p tokens[6]]
Junk after end of expression.
+p tokens[6]
$13 = 0x7fffffffe353 "12"
+s
new_ab (strs=0x7fffffffded0) at src/construct_ab.c:32
+p *this
$14 = {
  size = 1202184127,
  a_bot = 1683246881,
  b_bot = 798229217,
  pivot = 217241539,
  pdata = 0x34365f363878
}
+s
ascii_number_sanity_check (strs=0x7fffffffded0) at src/sanity_check.c:62
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
new_ab (strs=0x7fffffffded0) at src/construct_ab.c:34
+p str_cnt
$15 = 12
+n
+n
+display this
7: this = (t_stack_ab *) 0x4082a0
+display *this
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x0
}
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x0
}
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
+display this->pdata
9: this->pdata = (int *) 0x4082c0
+p *this->pdata
$16 = 0
+display *this->pdata
10: *this->pdata = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
+p strs[str_cnt - 1 - idx]
$17 = 0x7fffffffe342 "65"
+p str_cnt
$18 = 12
+p idx
$19 = 11
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
+p this->pdata[idx]
$20 = 65
+display this->pdata[idx]
11: this->pdata[idx] = 65
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 45
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 71
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 6
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 30
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 51
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 12
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 50
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 74
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 92
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 88
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 0
11: this->pdata[idx] = 0
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 5
11: this->pdata[idx] = 5
+n
7: this = (t_stack_ab *) 0x4082a0
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
9: this->pdata = (int *) 0x4082c0
10: *this->pdata = 5
11: this->pdata[idx] = 0
+p this
$21 = (t_stack_ab *) 0x4082a0
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdec8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+c
Continuing.
[Inferior 1 (process 450569) exited normally]
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdec8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe342 "65"
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+s
new_ab (strs=0x7fffffffded0) at src/construct_ab.c:32
+n
+n
+q
+set print pretty on
+set print array on
+define main
+define *new_ab
.gdbinit:20: Error in sourced command file:
Junk in argument list: "*new_ab"
+m
Ambiguous command "m": macro, main, maintenance, make, mem, memory-tag, monitor, mt.
+q
+set print pretty on
+set print array on
+define main
+define *new_ab
.gdbinit:20: Error in sourced command file:
Junk in argument list: "*new_ab"
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdec8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe342 "65"
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+s
new_ab (strs=0x7fffffffded0) at src/construct_ab.c:32
+main
++display argc
No symbol "argc" in current context.
+n
+new_ab
++display *this
++display this
++display strs
+n
7: *this = {
  size = -133291744,
  a_bot = 722925563,
  b_bot = 361445768,
  pivot = -206600610,
  pdata = 0x34365f363878
}
8: this = (t_stack_ab *) 0x7fffffffe2f9
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+nn
Undefined command: "nn".  Try "help".
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+s
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:81
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+s
quick_sort (arr=0x408300, left=0, right=11) at src/normalize_int.c:39
+p left
$1 = 0
+p right
$2 = 11
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:88
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
new_ab (strs=0x7fffffffded0) at src/construct_ab.c:54
7: *this = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffded0
+n
main (argc=13, argv=0x7fffffffdec8) at src/main.c:65
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe342 "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe342 "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe342 "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+refresh
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdec8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe342 "65"
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe342 "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe342 "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+s
solve_push_swap (pab=0x4082a0) at src/main.c:32
+reverse stepi
Ambiguous command "reverse stepi": reverse-continue, reverse-finish, reverse-next, reverse-nexti, reverse-search, reverse-step...
+reverse-stepi
Target multi-thread does not support this command.
+reverse-step
Target multi-thread does not support this command.
+info checkpoints
No checkpoints.
+info checkpoint
No checkpoints.
+checkpoints
Undefined command: "checkpoints".  Try "help".
+checkpoint
checkpoint 1: fork returned pid 456337.
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdec8) at src/main.c:50
+record
+target record-full
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+reverse-stepi
+stepi 
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+reverse-stepi
+stepi 

No more reverse-execution history.
main (argc=13, argv=0x7fffffffdec8) at src/main.c:50
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdec8) at src/main.c:50
+record
+target record-full
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe313 "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe342 "65",
  0x7fffffffe345 "45",
  0x7fffffffe348 "71",
  0x7fffffffe34b "6",
  0x7fffffffe34d "30",
  0x7fffffffe350 "51",
  0x7fffffffe353 "12",
  0x7fffffffe356 "50",
  0x7fffffffe359 "74",
  0x7fffffffe35c "92",
  0x7fffffffe35f "88",
  0x7fffffffe362 "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe342 "65"
5: pab = (t_stack_ab *) 0x7fffffffe309
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 1747910656,
  pivot = 795176303,
  pdata = 0x6972622d6564756c
}
+s
new_ab (strs=0x7fffffffded0) at src/construct_ab.c:32
+new_ab
++display *this
++display this
++display strs
+n
7: *this = {
  size = -83078547,
  a_bot = -1617494794,
  b_bot = -1895381522,
  pivot = -472831175,
  pdata = 0x34365f363878
}
8: this = (t_stack_ab *) 0x7fffffffe2f9
9: strs = (char **) 0x7fffffffded0
+n
7: *this = {
  size = -83078547,
  a_bot = -1617494794,
  b_bot = -1895381522,
  pivot = -472831175,
  pdata = 0x34365f363878
}
8: this = (t_stack_ab *) 0x7fffffffe2f9
9: strs = (char **) 0x7fffffffded0
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.

Program stopped.
0x00007ffff7dc2c85 in __GI___getrandom (buffer=buffer@entry=0x7ffff7f9d4d8 <tcache_key>, length=length@entry=8, flags=flags@entry=1) at ../sysdeps/unix/sysv/linux/getrandom.c:29
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+q
+set print pretty on
+set print array on
Quit
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+record
+target record-full
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33b "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+p tokens
$1 = (char **) 0x7fffffffdec0
+p *tokens
$2 = 0x7fffffffe33b "65"
+p **tokens
$3 = 54 '6'
+p *tokens
$4 = 0x7fffffffe33b "65"
+p tokens
$5 = (char **) 0x7fffffffdec0
+p argv
$6 = (char **) 0x7fffffffdeb8
+p *argv
$7 = 0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap"
+p **argv
$8 = 47 '/'
+p *argv[]
A syntax error in expression, near `]'.
+p **argv
$9 = 47 '/'
+p tokens[1]
$10 = 0x7fffffffe33e "45"
+p tokens[2]
$11 = 0x7fffffffe341 "71"
+p tokens[3]
$12 = 0x7fffffffe344 "6"
+s
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:32
+new_ab
++display *this
++display this
++display strs
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:62
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:34
7: *this = {
  size = 1010302082,
  a_bot = 2005056617,
  b_bot = -1946205923,
  pivot = 1691087957,
  pdata = 0x34365f363878
}
8: this = (t_stack_ab *) 0x7fffffffe2e9
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 1010302082,
  a_bot = 2005056617,
  b_bot = -1946205923,
  pivot = 1691087957,
  pdata = 0x34365f363878
}
8: this = (t_stack_ab *) 0x7fffffffe2e9
9: strs = (char **) 0x7fffffffdec0
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.

Program stopped.
0x00007ffff7dc2c85 in __GI___getrandom (buffer=buffer@entry=0x7ffff7f9d4d8 <tcache_key>, length=length@entry=8, flags=flags@entry=1) at ../sysdeps/unix/sysv/linux/getrandom.c:29
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+record
+target record-full
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33b "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.

Program stopped.
0x00007ffff7dc2c85 in __GI___getrandom (buffer=buffer@entry=0x7ffff7f9d4d8 <tcache_key>, length=length@entry=8, flags=flags@entry=1) at ../sysdeps/unix/sysv/linux/getrandom.c:29
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+record
+target record-full
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+p *tokens
Cannot access memory at address 0x64
+p **tokens
Cannot access memory at address 0x64
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x7fffffffdeb8
4: *tokens = 0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+p *tokens
$1 = 0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap"
+p **tokens
$2 = 47 '/'
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x7fffffffdeb8
4: *tokens = 0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap"
5: pab = (t_stack_ab *) 0x0
6: *pab = <error: Cannot access memory at address 0x0>
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x7fffffffdeb8
4: *tokens = 0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap"
5: pab = (t_stack_ab *) 0x0
6: *pab = <error: Cannot access memory at address 0x0>
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x7fffffffdeb8
4: *tokens = 0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap"
5: pab = (t_stack_ab *) 0x0
6: *pab = <error: Cannot access memory at address 0x0>
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+record
+target record-full
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x7fffffffded0
4: *tokens = 0x7fffffffe341 "71"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+p *tokens
$1 = 0x7fffffffe341 "71"
+q
Please answer y or n.
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401240: file src/main.c, line 46.
+run 65 45 71 6 30 51 12 50 74 92 88 5
`/home/lude-bri/CC/Rank2/push_swap/ko/push_swap' has disappeared; keeping its symbols.
.gdbinit:29: Error in sourced command file:
During startup program exited with code 127.
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+record
+target record-full
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.

Program stopped.
0x00007ffff7dc2c85 in __GI___getrandom (buffer=buffer@entry=0x7ffff7f9d4d8 <tcache_key>, length=length@entry=8, flags=flags@entry=1) at ../sysdeps/unix/sysv/linux/getrandom.c:29
+c
Continuing.
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+c
Continuing.
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+record
+target record-full
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+s
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:32
+n
+n
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.

Program stopped.
0x00007ffff7dc2c85 in __GI___getrandom (buffer=buffer@entry=0x7ffff7f9d4d8 <tcache_key>, length=length@entry=8, flags=flags@entry=1) at ../sysdeps/unix/sysv/linux/getrandom.c:29
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+record
+target record-full
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+s
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:32
+n
+n
+c
Continuing.
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.

Program stopped.
0x00007ffff7dc2c85 in __GI___getrandom (buffer=buffer@entry=0x7ffff7f9d4d8 <tcache_key>, length=length@entry=8, flags=flags@entry=1) at ../sysdeps/unix/sysv/linux/getrandom.c:29
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+record
+target record-full
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
Process record and replay target doesn't support syscall number 318
Process record: failed to record execution log.

Program stopped.
0x00007ffff7dc2c85 in __GI___getrandom (buffer=buffer@entry=0x7ffff7f9d4d8 <tcache_key>, length=length@entry=8, flags=flags@entry=1) at ../sysdeps/unix/sysv/linux/getrandom.c:29
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 85
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=12, argv=0x7fffffffdeb8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 12
2: *argv@argc = {
  0x7fffffffe30d "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33c "65",
  0x7fffffffe33f "45",
  0x7fffffffe342 "71",
  0x7fffffffe345 "6",
  0x7fffffffe347 "30",
  0x7fffffffe34a "51",
  0x7fffffffe34d "12",
  0x7fffffffe350 "50",
  0x7fffffffe353 "74",
  0x7fffffffe356 "92",
  0x7fffffffe359 "85"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x6d6f682f00000000
}
+n
1: argc = 12
2: *argv@argc = {
  0x7fffffffe30d "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33c "65",
  0x7fffffffe33f "45",
  0x7fffffffe342 "71",
  0x7fffffffe345 "6",
  0x7fffffffe347 "30",
  0x7fffffffe34a "51",
  0x7fffffffe34d "12",
  0x7fffffffe350 "50",
  0x7fffffffe353 "74",
  0x7fffffffe356 "92",
  0x7fffffffe359 "85"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x6d6f682f00000000
}
+n
1: argc = 12
2: *argv@argc = {
  0x7fffffffe30d "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33c "65",
  0x7fffffffe33f "45",
  0x7fffffffe342 "71",
  0x7fffffffe345 "6",
  0x7fffffffe347 "30",
  0x7fffffffe34a "51",
  0x7fffffffe34d "12",
  0x7fffffffe350 "50",
  0x7fffffffe353 "74",
  0x7fffffffe356 "92",
  0x7fffffffe359 "85"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33c "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x6d6f682f00000000
}
+n
1: argc = 12
2: *argv@argc = {
  0x7fffffffe30d "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33c "65",
  0x7fffffffe33f "45",
  0x7fffffffe342 "71",
  0x7fffffffe345 "6",
  0x7fffffffe347 "30",
  0x7fffffffe34a "51",
  0x7fffffffe34d "12",
  0x7fffffffe350 "50",
  0x7fffffffe353 "74",
  0x7fffffffe356 "92",
  0x7fffffffe359 "85"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33c "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 11,
  a_bot = 0,
  b_bot = 10,
  pivot = 11,
  pdata = 0x4082c0
}
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 85
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=12, argv=0x7fffffffdeb8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 12
2: *argv@argc = {
  0x7fffffffe30d "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33c "65",
  0x7fffffffe33f "45",
  0x7fffffffe342 "71",
  0x7fffffffe345 "6",
  0x7fffffffe347 "30",
  0x7fffffffe34a "51",
  0x7fffffffe34d "12",
  0x7fffffffe350 "50",
  0x7fffffffe353 "74",
  0x7fffffffe356 "92",
  0x7fffffffe359 "85"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x6d6f682f00000000
}
+n
1: argc = 12
2: *argv@argc = {
  0x7fffffffe30d "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33c "65",
  0x7fffffffe33f "45",
  0x7fffffffe342 "71",
  0x7fffffffe345 "6",
  0x7fffffffe347 "30",
  0x7fffffffe34a "51",
  0x7fffffffe34d "12",
  0x7fffffffe350 "50",
  0x7fffffffe353 "74",
  0x7fffffffe356 "92",
  0x7fffffffe359 "85"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x6d6f682f00000000
}
+n
1: argc = 12
2: *argv@argc = {
  0x7fffffffe30d "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33c "65",
  0x7fffffffe33f "45",
  0x7fffffffe342 "71",
  0x7fffffffe345 "6",
  0x7fffffffe347 "30",
  0x7fffffffe34a "51",
  0x7fffffffe34d "12",
  0x7fffffffe350 "50",
  0x7fffffffe353 "74",
  0x7fffffffe356 "92",
  0x7fffffffe359 "85"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33c "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x6d6f682f00000000
}
+s
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:32
+n
+n
+n
+n
+n
+n
+new_ab
++display *this
++display this
++display strs
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+disp this->pdata[idx]
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 71
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 6
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 30
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 51
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+p this->pdata
$1 = (int *) 0x4082c0
+p this->pdata[]
A syntax error in expression, near `]'.
+p this->pdata[0]
$2 = 0
+p this->pdata[1]
$3 = 0
+p this->pdata[2]
$4 = 0
+p this->pdata[3]
$5 = 0
+p this->pdata[idx]
$6 = 0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 12
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 50
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 74
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 92
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 85
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 11,
  a_bot = 0,
  b_bot = 10,
  pivot = 11,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 11,
  a_bot = 0,
  b_bot = 10,
  pivot = 11,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
7: *this = {
  size = 11,
  a_bot = 0,
  b_bot = 10,
  pivot = 11,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
10: this->pdata[idx] = 0
+n
main (argc=12, argv=0x7fffffffdeb8) at src/main.c:65
1: argc = 12
2: *argv@argc = {
  0x7fffffffe30d "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33c "65",
  0x7fffffffe33f "45",
  0x7fffffffe342 "71",
  0x7fffffffe345 "6",
  0x7fffffffe347 "30",
  0x7fffffffe34a "51",
  0x7fffffffe34d "12",
  0x7fffffffe350 "50",
  0x7fffffffe353 "74",
  0x7fffffffe356 "92",
  0x7fffffffe359 "85"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33c "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 11,
  a_bot = 0,
  b_bot = 10,
  pivot = 11,
  pdata = 0x4082c0
}
+n
1: argc = 12
2: *argv@argc = {
  0x7fffffffe30d "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33c "65",
  0x7fffffffe33f "45",
  0x7fffffffe342 "71",
  0x7fffffffe345 "6",
  0x7fffffffe347 "30",
  0x7fffffffe34a "51",
  0x7fffffffe34d "12",
  0x7fffffffe350 "50",
  0x7fffffffe353 "74",
  0x7fffffffe356 "92",
  0x7fffffffe359 "85"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33c "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 11,
  a_bot = 0,
  b_bot = 10,
  pivot = 11,
  pdata = 0x4082c0
}
+s
solve_push_swap (pab=0x4082a0) at src/main.c:32
+n
+n
+n
+s
sort_ab (pab=0x4082a0, p_cmd_vec=0x408340) at src/psa_quick.c:69
+p pab->size
$7 = 11
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+s
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:32
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+s
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:81
+disp *sorted_arr
7: *sorted_arr = <error: Cannot access memory at address 0xd>
+disp sorted_arrp[idx]
No symbol "sorted_arrp" in current context.
+disp idx
8: idx = 0
+disp arr[idx]
9: arr[idx] = 5
+disp size
10: size = 12
+n
7: *sorted_arr = 0
8: idx = 0
9: arr[idx] = 5
10: size = 12
+disp sorted_arr[idx]
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 0
8: idx = 0
9: arr[idx] = 5
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 0
8: idx = -1
9: arr[idx] = 0
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 0
8: idx = 0
9: arr[idx] = 5
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 0
9: arr[idx] = 5
10: size = 12
11: sorted_arr[idx] = 5
+n
7: *sorted_arr = 5
8: idx = 1
9: arr[idx] = 88
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 1
9: arr[idx] = 88
10: size = 12
11: sorted_arr[idx] = 88
+n
7: *sorted_arr = 5
8: idx = 2
9: arr[idx] = 92
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 2
9: arr[idx] = 92
10: size = 12
11: sorted_arr[idx] = 92
+n
7: *sorted_arr = 5
8: idx = 3
9: arr[idx] = 74
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 3
9: arr[idx] = 74
10: size = 12
11: sorted_arr[idx] = 74
+n
7: *sorted_arr = 5
8: idx = 4
9: arr[idx] = 50
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 4
9: arr[idx] = 50
10: size = 12
11: sorted_arr[idx] = 50
+n
7: *sorted_arr = 5
8: idx = 5
9: arr[idx] = 12
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 5
9: arr[idx] = 12
10: size = 12
11: sorted_arr[idx] = 12
+n
7: *sorted_arr = 5
8: idx = 6
9: arr[idx] = 51
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 6
9: arr[idx] = 51
10: size = 12
11: sorted_arr[idx] = 51
+n
7: *sorted_arr = 5
8: idx = 7
9: arr[idx] = 30
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 7
9: arr[idx] = 30
10: size = 12
11: sorted_arr[idx] = 30
+n
7: *sorted_arr = 5
8: idx = 8
9: arr[idx] = 6
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 8
9: arr[idx] = 6
10: size = 12
11: sorted_arr[idx] = 6
+n
7: *sorted_arr = 5
8: idx = 9
9: arr[idx] = 71
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 9
9: arr[idx] = 71
10: size = 12
11: sorted_arr[idx] = 71
+n
7: *sorted_arr = 5
8: idx = 10
9: arr[idx] = 45
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 10
9: arr[idx] = 45
10: size = 12
11: sorted_arr[idx] = 45
+n
7: *sorted_arr = 5
8: idx = 11
9: arr[idx] = 65
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 11
9: arr[idx] = 65
10: size = 12
11: sorted_arr[idx] = 65
+n
7: *sorted_arr = 5
8: idx = 12
9: arr[idx] = 0
10: size = 12
11: sorted_arr[idx] = 0
+s
quick_sort (arr=0x408300, left=0, right=11) at src/normalize_int.c:39
+disp i
12: i = 0
+disp j
13: j = 4211463
+disp pivot
14: pivot = 32767
+n
12: i = 0
13: j = 4211463
14: pivot = 12
+n
12: i = 0
13: j = 4211463
14: pivot = 12
+n
12: i = 0
13: j = 11
14: pivot = 12
+disp arr[i]
15: arr[i] = 5
+n
12: i = 0
13: j = 11
14: pivot = 12
15: arr[i] = 5
+n
12: i = 0
13: j = 11
14: pivot = 12
15: arr[i] = 5
+n
12: i = 1
13: j = 11
14: pivot = 12
15: arr[i] = 88
+n
12: i = 1
13: j = 11
14: pivot = 12
15: arr[i] = 88
+disp arr[j]
16: arr[j] = 65
+n
12: i = 1
13: j = 11
14: pivot = 12
15: arr[i] = 88
16: arr[j] = 65
+n
12: i = 1
13: j = 10
14: pivot = 12
15: arr[i] = 88
16: arr[j] = 45
+n
12: i = 1
13: j = 10
14: pivot = 12
15: arr[i] = 88
16: arr[j] = 45
+n
12: i = 1
13: j = 9
14: pivot = 12
15: arr[i] = 88
16: arr[j] = 71
+n
12: i = 1
13: j = 9
14: pivot = 12
15: arr[i] = 88
16: arr[j] = 71
+n
12: i = 1
13: j = 8
14: pivot = 12
15: arr[i] = 88
16: arr[j] = 6
+n
12: i = 1
13: j = 8
14: pivot = 12
15: arr[i] = 88
16: arr[j] = 6
+n
12: i = 1
13: j = 8
14: pivot = 12
15: arr[i] = 88
16: arr[j] = 6
+n
12: i = 1
13: j = 8
14: pivot = 12
15: arr[i] = 88
16: arr[j] = 6
+n
12: i = 2
13: j = 8
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 6
+n
12: i = 2
13: j = 7
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 30
+n
12: i = 2
13: j = 7
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 30
+n
12: i = 2
13: j = 7
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 30
+n
12: i = 2
13: j = 7
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 30
+n
12: i = 2
13: j = 6
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 51
+n
12: i = 2
13: j = 6
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 51
+n
12: i = 2
13: j = 5
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 12
+n
12: i = 2
13: j = 5
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 12
+n
12: i = 2
13: j = 5
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 12
+n
12: i = 2
13: j = 5
14: pivot = 12
15: arr[i] = 92
16: arr[j] = 12
+n
12: i = 3
13: j = 5
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 12
+n
12: i = 3
13: j = 4
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 50
+n
12: i = 3
13: j = 4
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 50
+n
12: i = 3
13: j = 4
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 50
+n
12: i = 3
13: j = 4
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 50
+n
12: i = 3
13: j = 3
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 74
+n
12: i = 3
13: j = 3
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 74
+n
12: i = 3
13: j = 2
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 12
+n
12: i = 3
13: j = 2
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 12
+n
12: i = 3
13: j = 2
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 12
+n
12: i = 3
13: j = 2
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 12
+n
12: i = 3
13: j = 2
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 12
+n
12: i = 3
13: j = 2
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 12
+n
12: i = 3
13: j = 2
14: pivot = 12
15: arr[i] = 74
16: arr[j] = 12
+n
12: i = 3
13: j = 2
14: pivot = 12
15: arr[i] = 30
16: arr[j] = 12
+n
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:88
7: *sorted_arr = 5
8: idx = 12
9: arr[idx] = 0
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 12
9: arr[idx] = 0
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = -1
9: arr[idx] = 0
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 5
8: idx = 0
9: arr[idx] = 5
10: size = 12
11: sorted_arr[idx] = 5
+n
7: *sorted_arr = 5
8: idx = 0
9: arr[idx] = 0
10: size = 12
11: sorted_arr[idx] = 5
+n
7: *sorted_arr = 5
8: idx = 1
9: arr[idx] = 88
10: size = 12
11: sorted_arr[idx] = 6
+n
7: *sorted_arr = 5
8: idx = 1
9: arr[idx] = 10
10: size = 12
11: sorted_arr[idx] = 6
+n
7: *sorted_arr = 5
8: idx = 2
9: arr[idx] = 92
10: size = 12
11: sorted_arr[idx] = 12
+n
7: *sorted_arr = 5
8: idx = 2
9: arr[idx] = 11
10: size = 12
11: sorted_arr[idx] = 12
+n
7: *sorted_arr = 5
8: idx = 3
9: arr[idx] = 74
10: size = 12
11: sorted_arr[idx] = 30
+n
7: *sorted_arr = 5
8: idx = 3
9: arr[idx] = 9
10: size = 12
11: sorted_arr[idx] = 30
+n
7: *sorted_arr = 5
8: idx = 4
9: arr[idx] = 50
10: size = 12
11: sorted_arr[idx] = 45
+n
7: *sorted_arr = 5
8: idx = 4
9: arr[idx] = 5
10: size = 12
11: sorted_arr[idx] = 45
+n
7: *sorted_arr = 5
8: idx = 5
9: arr[idx] = 12
10: size = 12
11: sorted_arr[idx] = 50
+s
binary_search (arr=0x408300, target=12, begin=0, end=12) at src/normalize_int.c:21
+s
+s
+s
+s
+s
+s
+s
+s
+s
+s
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:94
7: *sorted_arr = 5
8: idx = 5
9: arr[idx] = 2
10: size = 12
11: sorted_arr[idx] = 50
+s
7: *sorted_arr = 5
8: idx = 6
9: arr[idx] = 51
10: size = 12
11: sorted_arr[idx] = 51
+s
binary_search (arr=0x408300, target=51, begin=0, end=12) at src/normalize_int.c:21
+s
+s
+s
+s
+s
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:94
7: *sorted_arr = 5
8: idx = 6
9: arr[idx] = 6
10: size = 12
11: sorted_arr[idx] = 51
+s
7: *sorted_arr = 5
8: idx = 7
9: arr[idx] = 30
10: size = 12
11: sorted_arr[idx] = 65
+s
binary_search (arr=0x408300, target=30, begin=0, end=12) at src/normalize_int.c:21
+s
+s
+s
+s
+s
+s
+s
+s
+s
+s
+s
+s
+s
+s
+s
+s
+s
+s
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:94
7: *sorted_arr = 5
8: idx = 7
9: arr[idx] = 3
10: size = 12
11: sorted_arr[idx] = 65
+s
7: *sorted_arr = 5
8: idx = 8
9: arr[idx] = 6
10: size = 12
11: sorted_arr[idx] = 71
+s
binary_search (arr=0x408300, target=6, begin=0, end=12) at src/normalize_int.c:21
+disp end
17: end = 12
+disp begin
18: begin = 0
+disp mid
19: mid = 4
+n
17: end = 12
18: begin = 0
19: mid = 4
+n
17: end = 12
18: begin = 0
19: mid = 6
+n
17: end = 12
18: begin = 0
19: mid = 6
+n
17: end = 12
18: begin = 0
19: mid = 6
+n
17: end = 5
18: begin = 0
19: mid = 6
+n
17: end = 5
18: begin = 0
19: mid = 6
+n
17: end = 5
18: begin = 0
19: mid = 2
+n
17: end = 5
18: begin = 0
19: mid = 2
+n
17: end = 5
18: begin = 0
19: mid = 2
+n
17: end = 1
18: begin = 0
19: mid = 2
+n
17: end = 1
18: begin = 0
19: mid = 2
+n
17: end = 1
18: begin = 0
19: mid = 0
+n
17: end = 1
18: begin = 0
19: mid = 0
+n
17: end = 1
18: begin = 0
19: mid = 0
+n
17: end = 1
18: begin = 1
19: mid = 0
+n
17: end = 1
18: begin = 1
19: mid = 0
+n
17: end = 1
18: begin = 1
19: mid = 0
+n
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:94
7: *sorted_arr = 5
8: idx = 8
9: arr[idx] = 1
10: size = 12
11: sorted_arr[idx] = 71
+n
7: *sorted_arr = 5
8: idx = 9
9: arr[idx] = 71
10: size = 12
11: sorted_arr[idx] = 74
+n
7: *sorted_arr = 5
8: idx = 9
9: arr[idx] = 8
10: size = 12
11: sorted_arr[idx] = 74
+n
7: *sorted_arr = 5
8: idx = 10
9: arr[idx] = 45
10: size = 12
11: sorted_arr[idx] = 88
+n
7: *sorted_arr = 5
8: idx = 10
9: arr[idx] = 4
10: size = 12
11: sorted_arr[idx] = 88
+n
7: *sorted_arr = 5
8: idx = 11
9: arr[idx] = 65
10: size = 12
11: sorted_arr[idx] = 92
+n
7: *sorted_arr = 5
8: idx = 11
9: arr[idx] = 7
10: size = 12
11: sorted_arr[idx] = 92
+n
7: *sorted_arr = 5
8: idx = 12
9: arr[idx] = 0
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 1032
8: idx = 12
9: arr[idx] = 0
10: size = 12
11: sorted_arr[idx] = 0
+n
7: *sorted_arr = 1032
8: idx = 12
9: arr[idx] = 0
10: size = 12
11: sorted_arr[idx] = 0
+n
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:54
+n
+n
main (argc=13, argv=0x7fffffffdeb8) at src/main.c:65
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+s
solve_push_swap (pab=0x4082a0) at src/main.c:32
+n
+n
+n
+s
sort_ab (pab=0x4082a0, p_cmd_vec=0x408340) at src/psa_quick.c:69
+p partition_size
$1 = 0
+p size
No symbol "size" in current context.
+p p->size
No symbol "p" in current context.
+p pab->size
$2 = 12
+disp partition_size
20: partition_size = 0
+n
20: partition_size = 4
+disp big_pivot
21: big_pivot = 4227904
+n
20: partition_size = 4
21: big_pivot = 8
+disp small_pivot
22: small_pivot = 0
+n
20: partition_size = 4
21: big_pivot = 8
22: small_pivot = 4
+n
20: partition_size = 4
21: big_pivot = 8
22: small_pivot = 4
+p p_cmd_vec
$3 = (t_ft_vector *) 0x408340
+p *p_cmd_vec
$4 = {
  pbuffer = 0x4083b0,
  size = 0,
  capacity = 256,
  data_size = 4,
  construct_data = 0x403710 <set_int>,
  delete_data = 0x403730 <free_int>,
  at = 0x403e60 <ft_vec_at>,
  front = 0x403eb0 <ft_vec_front>,
  back = 0x403ef0 <ft_vec_back>,
  empty = 0x403f40 <ft_vec_empty>,
  clear = 0x403f60 <ft_vec_clear>,
  push_back = 0x404130 <ft_vec_push_back>,
  resize = 0x403fd0 <ft_vec_resize>
}
+s
split_first (pab=0x4082a0, p_cmd_vec=0x408340, start=0, end=12) at src/psa_quick.c:47
+disp partition_size
23: partition_size = 32767
+disp big_pivot
24: big_pivot = -8896
+disp small_pivot
25: small_pivot = 0
+disp idx
26: idx = 4227904
+disp end
27: end = 12
+disp start
28: start = 0
+n
23: partition_size = 4
24: big_pivot = -8896
25: small_pivot = 0
26: idx = 4227904
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 0
26: idx = 4227904
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 4227904
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = -1
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 0
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 0
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 0
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 0
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 1
27: end = 12
28: start = 0
+s
a_top (this=0x4082a0) at src/stack_ab_access.c:17
+s
a_size (this=0x4082a0) at src/stack_ab_utility.c:74
+p this->pivot
$5 = 11
+p this->a_bot
$6 = 0
+n
a_top (this=0x4082a0) at src/stack_ab_access.c:18
+p b_size
$7 = {int (t_stack_ab *)} 0x401b40 <b_size>
+n
+n
split_first (pab=0x4082a0, p_cmd_vec=0x408340, start=0, end=12) at src/psa_quick.c:57
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 1
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 1
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 1
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 2
27: end = 12
28: start = 0
+p a_top(pab)
$8 = 8
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 2
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 2
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 3
27: end = 12
28: start = 0
+p a_top(pab)
$9 = 1
+p *pab
$10 = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 10,
  pdata = 0x4082c0
}
+p pab->pdata
$11 = (int *) 0x4082c0
+p pab->pdata[1]
$12 = 0
+p pab->pdata[2]
$13 = 10
+p pab->pdata[3]
$14 = 11
+p pab->pdata[4]
$15 = 9
+p pab->pdata[5]
$16 = 5
+p pab->pdata[6]
$17 = 2
+p pab->pdata[7]
$18 = 6
+p pab->pdata[8]
$19 = 3
+p pab->pdata
$20 = (int *) 0x4082c0
+p *pab->pdata
$21 = 8
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 3
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 3
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 3
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 3
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 3
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 4
27: end = 12
28: start = 0
+p a_top(pab)
$22 = 3
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 4
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 4
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 4
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 4
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 4
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 5
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 5
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 5
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 5
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 6
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 6
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 6
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 6
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 6
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 6
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 7
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 7
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 7
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 7
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 8
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 8
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 8
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 9
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 9
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 9
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 10
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 10
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 10
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 11
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 11
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 11
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 11
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 11
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 11
27: end = 12
28: start = 0
+n
23: partition_size = 4
24: big_pivot = 8
25: small_pivot = 4
26: idx = 12
27: end = 12
28: start = 0
+n
sort_ab (pab=0x4082a0, p_cmd_vec=0x408340) at src/psa_quick.c:78
20: partition_size = 4
21: big_pivot = 8
22: small_pivot = 4
+n
20: partition_size = 4
21: big_pivot = 8
22: small_pivot = 4
+n
20: partition_size = 4
21: big_pivot = 8
22: small_pivot = 4
+n
20: partition_size = 4
21: big_pivot = 8
22: small_pivot = 4
+n
20: partition_size = 4
21: big_pivot = 8
22: small_pivot = 4
+n
20: partition_size = 4
21: big_pivot = 8
22: small_pivot = 4
+n
20: partition_size = 4
21: big_pivot = 8
22: small_pivot = 4
+n
solve_push_swap (pab=0x4082a0) at src/main.c:41
+n
+n
+n
main (argc=13, argv=0x7fffffffdeb8) at src/main.c:71
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 1032,
  a_bot = 0,
  b_bot = -479182139,
  pivot = -1993927640,
  pdata = 0x4082c0
}
+n
__libc_start_call_main (main=main@entry=0x401240 <main>, argc=argc@entry=13, argv=argv@entry=0x7fffffffdeb8) at ../sysdeps/nptl/libc_start_call_main.h:74
+n
[Inferior 1 (process 1145831) exited normally]
+n
The program is not being run.
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+define quick_sort
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+s
solve_push_swap (pab=0x4082a0) at src/main.c:32
+s
new_command_buffer () at src/push_swap_command.c:29
+s
solve_push_swap (pab=0x4082a0) at src/main.c:33
+s
+s
is_ab_sorted (this=0x4082a0) at src/stack_ab_utility.c:21
+s
+s
b_size (this=0x4082a0) at src/stack_ab_utility.c:79
+s
is_ab_sorted (this=0x4082a0) at src/stack_ab_utility.c:24
+s
+s
+s
+s
solve_push_swap (pab=0x4082a0) at src/main.c:40
+s
sort_ab (pab=0x4082a0, p_cmd_vec=0x408340) at src/psa_quick.c:69
+s
+s
+s
+s
+s
split_first (pab=0x4082a0, p_cmd_vec=0x408340, start=0, end=12) at src/psa_quick.c:47
+s
+s
+s
+s
+s
+s
a_top (this=0x4082a0) at src/stack_ab_access.c:17
+s
a_size (this=0x4082a0) at src/stack_ab_utility.c:74
+s
a_top (this=0x4082a0) at src/stack_ab_access.c:18
+s
+s
split_first (pab=0x4082a0, p_cmd_vec=0x408340, start=0, end=12) at src/psa_quick.c:57
+s
a_top (this=0x4082a0) at src/stack_ab_access.c:17
+s
a_size (this=0x4082a0) at src/stack_ab_utility.c:74
+s
a_top (this=0x4082a0) at src/stack_ab_access.c:18
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+define quick_sort
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+s
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:32
+n
+n
+n
+n
+p this->pdata
$1 = (int *) 0x0
+p *this->pdata
Cannot access memory at address 0x0
+p str_cnt
$2 = 12
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+p this->pdata[idx]
$3 = 0
+n
+n
+n
+disp this->pdata[idx]
7: this->pdata[idx] = 88
+n
7: this->pdata[idx] = 0
+n
7: this->pdata[idx] = 5
+n
7: this->pdata[idx] = 0
+s
init_ab (this=0x4082a0, size=12) at src/construct_ab.c:19
+n
+p *this
$4 = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
+disp *this
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
+n
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 11,
  pivot = 0,
  pdata = 0x4082c0
}
+n
8: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
8: *this = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:49
7: this->pdata[idx] = 0
+s
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:81
+disp *arr
9: *arr = 5
+disp size
10: size = 12
+disp idx
11: idx = 0
+disp *sorted_arr
12: *sorted_arr = <error: Cannot access memory at address 0xd>
+disp sorted_arr[idx]
13: sorted_arr[idx] = <error: Cannot access memory at address 0xd>
+disp arr[idx]
14: arr[idx] = 5
+c
Continuing.
[Inferior 1 (process 1161579) exited normally]
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+define normailize_int
+define quick_sort
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+s
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:32
+new_ab
++display *this
++display this
++display strs
+m
Ambiguous command "m": macro, main, maintenance, make, mem, memory-tag, monitor, mt.
+n
7: *this = {
  size = -1307338040,
  a_bot = -1990112182,
  b_bot = -1173175648,
  pivot = 635232806,
  pdata = 0x34365f363878
}
8: this = (t_stack_ab *) 0x7fffffffe2e9
9: strs = (char **) 0x7fffffffdec0
+p this->pdata
$1 = (int *) 0x34365f363878
+p *this->pdata
Cannot access memory at address 0x34365f363878
+n
7: *this = {
  size = -1307338040,
  a_bot = -1990112182,
  b_bot = -1173175648,
  pivot = 635232806,
  pdata = 0x34365f363878
}
8: this = (t_stack_ab *) 0x7fffffffe2e9
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+p *this->pdata
Cannot access memory at address 0x0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+p *this->pdata
$2 = 0
+p **strs
$3 = 54 '6'
+p *strs
$4 = 0x7fffffffe33a "65"
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+u
7: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+n
7: *this = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
8: this = (t_stack_ab *) 0x4082a0
9: strs = (char **) 0x7fffffffdec0
+s
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:81
+normailize_int
++disp idx
++disp *arr
++disp size
++disp *sorted_arr
++disp sorted_arr[idx]
++disp arr[idx]
+n
10: idx = 0
11: *arr = 5
12: size = 12
13: *sorted_arr = 0
14: sorted_arr[idx] = 0
15: arr[idx] = 5
+n
10: idx = 0
11: *arr = 5
12: size = 12
13: *sorted_arr = 0
14: sorted_arr[idx] = 0
15: arr[idx] = 5
+n
10: idx = -1
11: *arr = 5
12: size = 12
13: *sorted_arr = 0
14: sorted_arr[idx] = 0
15: arr[idx] = 0
+n
10: idx = 0
11: *arr = 5
12: size = 12
13: *sorted_arr = 0
14: sorted_arr[idx] = 0
15: arr[idx] = 5
+n
10: idx = 0
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 5
15: arr[idx] = 5
+n
10: idx = 1
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 88
+n
10: idx = 1
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 88
15: arr[idx] = 88
+n
10: idx = 2
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 92
+n
10: idx = 2
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 92
15: arr[idx] = 92
+n
10: idx = 3
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 74
+n
10: idx = 3
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 74
15: arr[idx] = 74
+n
10: idx = 4
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 50
+n
10: idx = 4
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 50
15: arr[idx] = 50
+n
10: idx = 5
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 12
+n
10: idx = 5
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 12
15: arr[idx] = 12
+n
10: idx = 6
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 51
+n
10: idx = 6
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 51
15: arr[idx] = 51
+n
10: idx = 7
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 30
+n
10: idx = 7
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 30
15: arr[idx] = 30
+n
10: idx = 8
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 6
+n
10: idx = 8
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 6
15: arr[idx] = 6
+n
10: idx = 9
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 71
+n
10: idx = 9
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 71
15: arr[idx] = 71
+n
10: idx = 10
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 45
+n
10: idx = 10
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 45
15: arr[idx] = 45
+n
10: idx = 11
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 65
+n
10: idx = 11
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 65
15: arr[idx] = 65
+n
10: idx = 12
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 0
+s
quick_sort (arr=0x408300, left=0, right=11) at src/normalize_int.c:39
+quick_sort
++disp left
++disp right
++disp i
++disp j
++disp pivot
++disp arr[i]
++disp arr[j]
+n
16: left = 0
17: right = 11
18: i = 0
19: j = 4211463
20: pivot = 12
21: arr[i] = 5
22: arr[j] = <error: Cannot access memory at address 0x1418f1c>
+n
16: left = 0
17: right = 11
18: i = 0
19: j = 4211463
20: pivot = 12
21: arr[i] = 5
22: arr[j] = <error: Cannot access memory at address 0x1418f1c>
+n
16: left = 0
17: right = 11
18: i = 0
19: j = 11
20: pivot = 12
21: arr[i] = 5
22: arr[j] = 65
+n
16: left = 0
17: right = 11
18: i = 0
19: j = 11
20: pivot = 12
21: arr[i] = 5
22: arr[j] = 65
+n
16: left = 0
17: right = 11
18: i = 0
19: j = 11
20: pivot = 12
21: arr[i] = 5
22: arr[j] = 65
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 11
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 65
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 11
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 65
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 11
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 65
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 10
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 45
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 10
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 45
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 9
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 71
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 9
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 71
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 8
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 6
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 8
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 6
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 8
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 6
+n
16: left = 0
17: right = 11
18: i = 1
19: j = 8
20: pivot = 12
21: arr[i] = 88
22: arr[j] = 6
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 8
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 6
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 7
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 30
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 7
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 30
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 7
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 30
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 7
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 30
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 6
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 51
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 6
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 51
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 5
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 5
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 5
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 2
19: j = 5
20: pivot = 12
21: arr[i] = 92
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 5
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 4
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 50
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 4
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 50
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 4
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 50
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 4
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 50
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 3
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 74
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 3
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 74
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 2
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 2
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 2
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 2
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 2
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 2
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 2
20: pivot = 12
21: arr[i] = 74
22: arr[j] = 12
+n
16: left = 0
17: right = 11
18: i = 3
19: j = 2
20: pivot = 12
21: arr[i] = 30
22: arr[j] = 12
+n
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:88
10: idx = 12
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 0
+n
10: idx = 12
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 0
+n
10: idx = -1
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 0
15: arr[idx] = 0
+n
10: idx = 0
11: *arr = 5
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 5
15: arr[idx] = 5
+n
10: idx = 0
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 5
15: arr[idx] = 0
+n
10: idx = 1
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 6
15: arr[idx] = 88
+n
10: idx = 1
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 6
15: arr[idx] = 10
+n
10: idx = 2
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 12
15: arr[idx] = 92
+n
10: idx = 2
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 12
15: arr[idx] = 11
+n
10: idx = 3
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 30
15: arr[idx] = 74
+n
10: idx = 3
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 30
15: arr[idx] = 9
+n
10: idx = 4
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 45
15: arr[idx] = 50
+n
10: idx = 4
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 45
15: arr[idx] = 5
+n
10: idx = 5
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 50
15: arr[idx] = 12
+n
10: idx = 5
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 50
15: arr[idx] = 2
+n
10: idx = 6
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 51
15: arr[idx] = 51
+n
10: idx = 6
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 51
15: arr[idx] = 6
+n
10: idx = 7
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 65
15: arr[idx] = 30
+n
10: idx = 7
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 65
15: arr[idx] = 3
+n
10: idx = 8
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 71
15: arr[idx] = 6
+n
10: idx = 8
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 71
15: arr[idx] = 1
+n
10: idx = 9
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 74
15: arr[idx] = 71
+n
10: idx = 9
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 74
15: arr[idx] = 8
+n
10: idx = 10
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 88
15: arr[idx] = 45
+n
10: idx = 10
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 88
15: arr[idx] = 4
+n
10: idx = 11
11: *arr = 0
12: size = 12
13: *sorted_arr = 5
14: sorted_arr[idx] = 92
15: arr[idx] = 65
+set print pretty on
+set print array on
+define main
+define new_ab
+define normailize_int
+define quick_sort
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x2f656d6f682f0000
}
+s
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:32
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:62
+s
+s
+s
is_number (str=0x7fffffffe33a "65") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:63
+s
+s
is_number (str=0x7fffffffe33d "45") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:63
+s
+s
is_number (str=0x7fffffffe340 "71") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:63
+s
+s
is_number (str=0x7fffffffe343 "6") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:63
+s
+s
is_number (str=0x7fffffffe345 "30") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:63
+s
+s
is_number (str=0x7fffffffe348 "51") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:63
+s
+s
is_number (str=0x7fffffffe34b "12") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:63
+s
+s
is_number (str=0x7fffffffe34e "50") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:63
+s
+s
is_number (str=0x7fffffffe351 "74") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdec0) at src/sanity_check.c:63
+p strs[idx]
$1 = 0x7fffffffe351 "74"
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:34
+p str_cnt
$2 = 12
+new_ab
++disp idx
++disp str_cnt
++disp *strs
++disp strs[str_cnt - 1 - idx]
++display *this
++display this
++display *this->pdata
++display this->pdata[idx]
+n
7: idx = 0
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe35a "5"
11: *this = {
  size = 2002704117,
  a_bot = 1829294549,
  b_bot = 1342349642,
  pivot = 1422169819,
  pdata = 0x34365f363878
}
12: this = (t_stack_ab *) 0x7fffffffe2e9
13: *this->pdata = <error: Cannot access memory at address 0x34365f363878>
14: this->pdata[idx] = <error: Cannot access memory at address 0x34365f363878>
+n
7: idx = 0
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe35a "5"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = <error: Cannot access memory at address 0x0>
14: this->pdata[idx] = <error: Cannot access memory at address 0x0>
+n
7: idx = 0
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe35a "5"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = <error: Cannot access memory at address 0x0>
14: this->pdata[idx] = <error: Cannot access memory at address 0x0>
+n
7: idx = 0
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe35a "5"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 0
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe35a "5"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 12
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 11
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe33a "65"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 11
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe33a "65"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 65
+n
7: idx = 10
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe33d "45"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 10
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe33d "45"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 45
+n
7: idx = 9
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe340 "71"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 9
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe340 "71"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 71
+n
7: idx = 8
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe343 "6"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 8
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe343 "6"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 6
+n
7: idx = 7
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe345 "30"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 7
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe345 "30"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 30
+n
7: idx = 6
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe348 "51"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 6
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe348 "51"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 51
+n
7: idx = 5
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe34b "12"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 5
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe34b "12"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 12
+n
7: idx = 4
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe34e "50"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 4
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe34e "50"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 50
+n
7: idx = 3
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe351 "74"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 3
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe351 "74"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 74
+n
7: idx = 2
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe354 "92"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 2
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe354 "92"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 92
+n
7: idx = 1
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe357 "88"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 1
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe357 "88"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 88
+n
7: idx = 0
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe35a "5"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = 0
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x7fffffffe35a "5"
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 5
14: this->pdata[idx] = 5
+n
7: idx = -1
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x0
11: *this = {
  size = 0,
  a_bot = 0,
  b_bot = 0,
  pivot = 0,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 5
14: this->pdata[idx] = 0
+s
init_ab (this=0x4082a0, size=12) at src/construct_ab.c:19
+s
+s
+s
+s
+s
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:49
7: idx = -1
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x0
11: *this = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 5
14: this->pdata[idx] = 0
+s
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:81
+normailize_int
++disp idx
++disp *arr
++disp size
++disp *sorted_arr
++disp sorted_arr[idx]
++disp arr[idx]
+n
15: idx = 0
16: *arr = 5
17: size = 12
18: *sorted_arr = 0
19: sorted_arr[idx] = 0
20: arr[idx] = 5
+n
15: idx = 0
16: *arr = 5
17: size = 12
18: *sorted_arr = 0
19: sorted_arr[idx] = 0
20: arr[idx] = 5
+n
15: idx = -1
16: *arr = 5
17: size = 12
18: *sorted_arr = 0
19: sorted_arr[idx] = 0
20: arr[idx] = 0
+n
15: idx = 0
16: *arr = 5
17: size = 12
18: *sorted_arr = 0
19: sorted_arr[idx] = 0
20: arr[idx] = 5
+n
15: idx = 0
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 5
20: arr[idx] = 5
+n
15: idx = 1
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 88
+n
15: idx = 1
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 88
20: arr[idx] = 88
+n
15: idx = 2
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 92
+n
15: idx = 2
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 92
20: arr[idx] = 92
+n
15: idx = 3
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 74
+n
15: idx = 3
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 74
20: arr[idx] = 74
+n
15: idx = 4
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 50
+n
15: idx = 4
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 50
20: arr[idx] = 50
+n
15: idx = 5
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 12
+n
15: idx = 5
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 12
20: arr[idx] = 12
+n
15: idx = 6
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 51
+n
15: idx = 6
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 51
20: arr[idx] = 51
+n
15: idx = 7
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 30
+n
15: idx = 7
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 30
20: arr[idx] = 30
+n
15: idx = 8
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 6
+n
15: idx = 8
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 6
20: arr[idx] = 6
+n
15: idx = 9
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 71
+n
15: idx = 9
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 71
20: arr[idx] = 71
+n
15: idx = 10
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 45
+n
15: idx = 10
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 45
20: arr[idx] = 45
+n
15: idx = 11
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 65
+n
15: idx = 11
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 65
20: arr[idx] = 65
+n
15: idx = 12
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 0
+s
quick_sort (arr=0x408300, left=0, right=11) at src/normalize_int.c:39
+p arr[10]
$3 = 45
+p left
$4 = 0
+p right
$5 = 11
+n
+n
+quick_sort
++disp left
++disp right
++disp i
++disp j
++disp pivot
++disp arr[i]
++disp arr[j]
+n
21: left = 0
22: right = 11
23: i = 0
24: j = 11
25: pivot = 12
26: arr[i] = 5
27: arr[j] = 65
+disp temp
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 0
24: j = 11
25: pivot = 12
26: arr[i] = 5
27: arr[j] = 65
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 0
24: j = 11
25: pivot = 12
26: arr[i] = 5
27: arr[j] = 65
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 11
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 65
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 11
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 65
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 11
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 65
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 10
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 45
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 10
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 45
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 9
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 71
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 9
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 71
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 8
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 6
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 8
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 6
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 8
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 6
28: temp = -8944
+n
21: left = 0
22: right = 11
23: i = 1
24: j = 8
25: pivot = 12
26: arr[i] = 88
27: arr[j] = 6
28: temp = 88
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 8
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 6
28: temp = 88
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 7
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 30
28: temp = 88
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 7
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 30
28: temp = 88
+p arr[1]
$6 = 6
+p arr[0]
$7 = 5
+p arr[2]
$8 = 92
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 7
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 30
28: temp = 88
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 7
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 30
28: temp = 88
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 6
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 51
28: temp = 88
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 6
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 51
28: temp = 88
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 5
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 12
28: temp = 88
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 5
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 12
28: temp = 88
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 5
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 12
28: temp = 88
+n
21: left = 0
22: right = 11
23: i = 2
24: j = 5
25: pivot = 12
26: arr[i] = 92
27: arr[j] = 12
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 5
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 12
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 4
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 50
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 4
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 50
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 4
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 50
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 4
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 50
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 3
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 74
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 3
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 74
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 2
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 12
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 2
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 12
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 2
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 12
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 2
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 12
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 2
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 12
28: temp = 92
+s
quick_sort (arr=0x408300, left=0, right=2) at src/normalize_int.c:39
21: left = 0
22: right = 2
23: i = 0
24: j = 2
25: pivot = 0
26: arr[i] = 5
27: arr[j] = 12
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 0
24: j = 2
25: pivot = 6
26: arr[i] = 5
27: arr[j] = 12
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 0
24: j = 2
25: pivot = 6
26: arr[i] = 5
27: arr[j] = 12
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 0
24: j = 2
25: pivot = 6
26: arr[i] = 5
27: arr[j] = 12
28: temp = 48
+p arr[0]
$9 = 5
+p arr[1]
$10 = 6
+p arr[2]
$11 = 12
+p arr[3]
$12 = 74
+p arr[4]
$13 = 50
+p arr[4]
$14 = 50
+p arr[5]
$15 = 92
+p arr[6]
$16 = 51
+n
21: left = 0
22: right = 2
23: i = 0
24: j = 2
25: pivot = 6
26: arr[i] = 5
27: arr[j] = 12
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 0
24: j = 2
25: pivot = 6
26: arr[i] = 5
27: arr[j] = 12
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 1
24: j = 2
25: pivot = 6
26: arr[i] = 6
27: arr[j] = 12
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 1
24: j = 2
25: pivot = 6
26: arr[i] = 6
27: arr[j] = 12
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 1
24: j = 2
25: pivot = 6
26: arr[i] = 6
27: arr[j] = 12
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 1
24: j = 1
25: pivot = 6
26: arr[i] = 6
27: arr[j] = 6
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 1
24: j = 1
25: pivot = 6
26: arr[i] = 6
27: arr[j] = 6
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 1
24: j = 1
25: pivot = 6
26: arr[i] = 6
27: arr[j] = 6
28: temp = 48
+n
21: left = 0
22: right = 2
23: i = 1
24: j = 1
25: pivot = 6
26: arr[i] = 6
27: arr[j] = 6
28: temp = 6
+n
21: left = 0
22: right = 2
23: i = 2
24: j = 1
25: pivot = 6
26: arr[i] = 12
27: arr[j] = 6
28: temp = 6
+n
21: left = 0
22: right = 2
23: i = 2
24: j = 0
25: pivot = 6
26: arr[i] = 12
27: arr[j] = 5
28: temp = 6
+n
21: left = 0
22: right = 2
23: i = 2
24: j = 0
25: pivot = 6
26: arr[i] = 12
27: arr[j] = 5
28: temp = 6
+n
21: left = 0
22: right = 2
23: i = 2
24: j = 0
25: pivot = 6
26: arr[i] = 12
27: arr[j] = 5
28: temp = 6
+n
21: left = 0
22: right = 2
23: i = 2
24: j = 0
25: pivot = 6
26: arr[i] = 12
27: arr[j] = 5
28: temp = 6
+n
quick_sort (arr=0x408300, left=0, right=11) at src/normalize_int.c:59
21: left = 0
22: right = 11
23: i = 3
24: j = 2
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 12
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 2
25: pivot = 12
26: arr[i] = 74
27: arr[j] = 12
28: temp = 92
+n
21: left = 0
22: right = 11
23: i = 3
24: j = 2
25: pivot = 12
26: arr[i] = 30
27: arr[j] = 12
28: temp = 92
+n
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:88
15: idx = 12
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 0
+n
15: idx = 12
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 0
+n
15: idx = -1
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 0
+n
15: idx = 0
16: *arr = 5
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 5
20: arr[idx] = 5
+p arr[0]
$17 = 5
+p arr[1]
$18 = 88
+p arr[2]
$19 = 92
+p arr[3]
$20 = 74
+p arr[4]
$21 = 50
+p arr[5]
$22 = 12
+p arr[6]
$23 = 51
+p arr[12]
$24 = 0
+p arr[11]
$25 = 65
+s
binary_search (arr=0x408300, target=5, begin=0, end=12) at src/normalize_int.c:21
+binary_search
Undefined command: "binary_search".  Try "help".
+p arr
$26 = (const int *) 0x408300
+p *arr
$27 = 5
+disp *arr
29: *arr = 5
+disp target
30: target = 5
+disp begin
31: begin = 0
+disp end
32: end = 12
+disp mid
33: mid = 92
+disp arr[mid]
34: arr[mid] = 0
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 12
33: mid = 92
34: arr[mid] = 0
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 12
33: mid = 6
34: arr[mid] = 51
+nn
Undefined command: "nn".  Try "help".
+nn
Undefined command: "nn".  Try "help".
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 12
33: mid = 6
34: arr[mid] = 51
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 12
33: mid = 6
34: arr[mid] = 51
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 5
33: mid = 6
34: arr[mid] = 51
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 5
33: mid = 6
34: arr[mid] = 51
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 5
33: mid = 2
34: arr[mid] = 12
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 5
33: mid = 2
34: arr[mid] = 12
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 5
33: mid = 2
34: arr[mid] = 12
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 1
33: mid = 2
34: arr[mid] = 12
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 1
33: mid = 2
34: arr[mid] = 12
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 1
33: mid = 0
34: arr[mid] = 5
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 1
33: mid = 0
34: arr[mid] = 5
+n
29: *arr = 5
30: target = 5
31: begin = 0
32: end = 1
33: mid = 0
34: arr[mid] = 5
+n
normailize_int (arr=0x4082c0, size=12) at src/normalize_int.c:94
15: idx = 0
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 5
20: arr[idx] = 0
+p arr[idx]
$28 = 0
+p arr[0]
$29 = 0
+p arr[1]
$30 = 88
+p arr[0]
$31 = 0
+p arr[1]
$32 = 88
+p arr[2]
$33 = 92
+p arr[12]
$34 = 0
+p arr[11]
$35 = 65
+p arr[13]
$36 = 0
+p arr[1]
$37 = 88
+p arr[0]
$38 = 0
+p arr[2]
$39 = 92
+p arr[3]
$40 = 74
+p arr[4]
$41 = 50
+p arr[5]
$42 = 12
+p arr[6]
$43 = 51
+p arr[7]
$44 = 30
+p arr[6]
$45 = 51
+n
15: idx = 1
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 6
20: arr[idx] = 88
+n
15: idx = 1
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 6
20: arr[idx] = 10
+n
15: idx = 2
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 12
20: arr[idx] = 92
+p arr[0]
$46 = 0
+p arr[1]
$47 = 10
+p arr[2]
$48 = 92
+n
15: idx = 2
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 12
20: arr[idx] = 11
+n
15: idx = 3
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 30
20: arr[idx] = 74
+n
15: idx = 3
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 30
20: arr[idx] = 9
+p arr[0]
$49 = 0
+p arr[1]
$50 = 10
+p arr[2]
$51 = 11
+n
15: idx = 4
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 45
20: arr[idx] = 50
+n
15: idx = 4
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 45
20: arr[idx] = 5
+p arr[3]
$52 = 9
+p arr[4]
$53 = 5
+p arr[5]
$54 = 12
+p arr[0]
$55 = 0
+p arr[1]
$56 = 10
+p arr[2]
$57 = 11
+p arr[3]
$58 = 9
+p arr[4]
$59 = 5
+p arr[5]
$60 = 12
+n
15: idx = 5
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 50
20: arr[idx] = 12
+n
15: idx = 5
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 50
20: arr[idx] = 2
+p arr[5]
$61 = 2
+n
15: idx = 6
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 51
20: arr[idx] = 51
+n
15: idx = 6
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 51
20: arr[idx] = 6
+p arr[6]
$62 = 6
+p arr[7]
$63 = 30
+n
15: idx = 7
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 65
20: arr[idx] = 30
+n
15: idx = 7
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 65
20: arr[idx] = 3
+p arr[7]
$64 = 3
+p arr[8]
$65 = 6
+n
15: idx = 8
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 71
20: arr[idx] = 6
+n
15: idx = 8
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 71
20: arr[idx] = 1
+p arr[8]
$66 = 1
+n
15: idx = 9
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 74
20: arr[idx] = 71
+n
15: idx = 9
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 74
20: arr[idx] = 8
+p arr[9]
$67 = 8
+p arr[10]
$68 = 45
+n
15: idx = 10
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 88
20: arr[idx] = 45
+n
15: idx = 10
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 88
20: arr[idx] = 4
+p arr[10]
$69 = 4
+p arr[11]
$70 = 65
+n
15: idx = 11
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 92
20: arr[idx] = 65
+n
15: idx = 11
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 92
20: arr[idx] = 7
+p arr[11]
$71 = 7
+n
15: idx = 12
16: *arr = 0
17: size = 12
18: *sorted_arr = 5
19: sorted_arr[idx] = 0
20: arr[idx] = 0
+n
15: idx = 12
16: *arr = 0
17: size = 12
18: *sorted_arr = 1032
19: sorted_arr[idx] = 0
20: arr[idx] = 0
+n
15: idx = 12
16: *arr = 0
17: size = 12
18: *sorted_arr = 1032
19: sorted_arr[idx] = 0
20: arr[idx] = 0
+n
new_ab (strs=0x7fffffffdec0) at src/construct_ab.c:54
7: idx = -1
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x0
11: *this = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
7: idx = -1
8: str_cnt = 12
9: *strs = 0x7fffffffe33a "65"
10: strs[str_cnt - 1 - idx] = 0x0
11: *this = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
12: this = (t_stack_ab *) 0x4082a0
13: *this->pdata = 0
14: this->pdata[idx] = 0
+n
main (argc=13, argv=0x7fffffffdeb8) at src/main.c:65
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30b "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33a "65",
  0x7fffffffe33d "45",
  0x7fffffffe340 "71",
  0x7fffffffe343 "6",
  0x7fffffffe345 "30",
  0x7fffffffe348 "51",
  0x7fffffffe34b "12",
  0x7fffffffe34e "50",
  0x7fffffffe351 "74",
  0x7fffffffe354 "92",
  0x7fffffffe357 "88",
  0x7fffffffe35a "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33a "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 1032,
  a_bot = 0,
  b_bot = 1670391518,
  pivot = -356303276,
  pdata = 0x4082c0
}
+n
__libc_start_call_main (main=main@entry=0x401240 <main>, argc=argc@entry=13, argv=argv@entry=0x7fffffffdeb8) at ../sysdeps/nptl/libc_start_call_main.h:74
+q
+set print pretty on
+set print array on
+define main
+define new_ab
+define normailize_int
+define quick_sort
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdeb8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33b "65"
5: pab = (t_stack_ab *) 0x7fffffffe2f9
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x656d6f682f000000
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33b "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe30c "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe33b "65",
  0x7fffffffe33e "45",
  0x7fffffffe341 "71",
  0x7fffffffe344 "6",
  0x7fffffffe346 "30",
  0x7fffffffe349 "51",
  0x7fffffffe34c "12",
  0x7fffffffe34f "50",
  0x7fffffffe352 "74",
  0x7fffffffe355 "92",
  0x7fffffffe358 "88",
  0x7fffffffe35b "5"
}
3: tokens = (char **) 0x7fffffffdec0
4: *tokens = 0x7fffffffe33b "65"
5: pab = (t_stack_ab *) 0x4082a0
6: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+s
solve_push_swap (pab=0x4082a0) at src/main.c:32
+n
+n
+n
+s
sort_ab (pab=0x4082a0, p_cmd_vec=0x408340) at src/psa_quick.c:69
+disp *pab
7: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
+disp partition_size
8: partition_size = 0
+disp big_pivot
9: big_pivot = 4227904
+disp small_pivot
10: small_pivot = 0
+n
7: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
8: partition_size = 4
9: big_pivot = 4227904
10: small_pivot = 0
+n
7: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
8: partition_size = 4
9: big_pivot = 8
10: small_pivot = 0
+n
7: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
8: partition_size = 4
9: big_pivot = 8
10: small_pivot = 4
+n
7: *pab = {
  size = 12,
  a_bot = 0,
  b_bot = 11,
  pivot = 12,
  pdata = 0x4082c0
}
8: partition_size = 4
9: big_pivot = 8
10: small_pivot = 4
+s
split_first (pab=0x4082a0, p_cmd_vec=0x408340, start=0, end=12) at src/psa_quick.c:47
+set print pretty on
+set print array on
+define main
+define new_ab
+define normailize_int
+define quick_sort
+define sort_ab
+fs cmd
Focus set to cmd window.
+break main
Breakpoint 1 at 0x401256: file src/main.c, line 50.
+run 65 45 71 6 30 51 12 50 74 92 88 5
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=13, argv=0x7fffffffdee8) at src/main.c:50
+main
++display argc
++display *argv@argc
++display tokens
++display *tokens
++display pab
++display *pab
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe32a "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe359 "65",
  0x7fffffffe35c "45",
  0x7fffffffe35f "71",
  0x7fffffffe362 "6",
  0x7fffffffe364 "30",
  0x7fffffffe367 "51",
  0x7fffffffe36a "12",
  0x7fffffffe36d "50",
  0x7fffffffe370 "74",
  0x7fffffffe373 "92",
  0x7fffffffe376 "88",
  0x7fffffffe379 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x6c2f656d6f682f00
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe32a "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe359 "65",
  0x7fffffffe35c "45",
  0x7fffffffe35f "71",
  0x7fffffffe362 "6",
  0x7fffffffe364 "30",
  0x7fffffffe367 "51",
  0x7fffffffe36a "12",
  0x7fffffffe36d "50",
  0x7fffffffe370 "74",
  0x7fffffffe373 "92",
  0x7fffffffe376 "88",
  0x7fffffffe379 "5"
}
3: tokens = (char **) 0x64
4: *tokens = <error: Cannot access memory at address 0x64>
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x6c2f656d6f682f00
}
+n
1: argc = 13
2: *argv@argc = {
  0x7fffffffe32a "/home/lude-bri/CC/Rank2/push_swap/ko/push_swap",
  0x7fffffffe359 "65",
  0x7fffffffe35c "45",
  0x7fffffffe35f "71",
  0x7fffffffe362 "6",
  0x7fffffffe364 "30",
  0x7fffffffe367 "51",
  0x7fffffffe36a "12",
  0x7fffffffe36d "50",
  0x7fffffffe370 "74",
  0x7fffffffe373 "92",
  0x7fffffffe376 "88",
  0x7fffffffe379 "5"
}
3: tokens = (char **) 0x7fffffffdef0
4: *tokens = 0x7fffffffe359 "65"
5: pab = (t_stack_ab *) 0x7fffffffe319
6: *pab = {
  size = 1597388920,
  a_bot = 13366,
  b_bot = 0,
  pivot = 0,
  pdata = 0x6c2f656d6f682f00
}
+s
new_ab (strs=0x7fffffffdef0) at src/construct_ab.c:32
+s
ascii_number_sanity_check (strs=0x7fffffffdef0) at src/sanity_check.c:62
+s
+s
+s
is_number (str=0x7fffffffe359 "65") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdef0) at src/sanity_check.c:63
+s
+s
is_number (str=0x7fffffffe35c "45") at src/sanity_check.c:19
+s
+s
+s
+s
+s
+s
+s
+s
+s
ascii_number_sanity_check (strs=0x7fffffffdef0) at src/sanity_check.c:63
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
new_ab (strs=0x7fffffffdef0) at src/construct_ab.c:34
+q
